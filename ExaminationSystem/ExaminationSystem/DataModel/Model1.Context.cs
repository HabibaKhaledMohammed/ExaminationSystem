//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExaminationSystem.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Examination_SystemEntities : DbContext
    {
        public Examination_SystemEntities()
            : base("name=Examination_SystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Dept_Location> Dept_Location { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Quest_Option> Quest_Option { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Stud_Course_Exam> Stud_Course_Exam { get; set; }
        public virtual DbSet<Stud_Exam_Quest> Stud_Exam_Quest { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
        public virtual DbSet<get_All_QuestionMCQ> get_All_QuestionMCQ { get; set; }
        public virtual DbSet<get_All_QuestionTF> get_All_QuestionTF { get; set; }
    
        public virtual int Correct_Exam(Nullable<int> exam_ID, Nullable<int> stud_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Correct_Exam", exam_IDParameter, stud_IDParameter);
        }
    
        public virtual int delete_all_Dept_cousre(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_all_Dept_cousre", courseIdParameter);
        }
    
        public virtual int delete_all_Inst_cousre(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_all_Inst_cousre", courseIdParameter);
        }
    
        public virtual int delete_all_topic_cousre(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_all_topic_cousre", courseIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_Course_ById(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Course_ById", courseIdParameter);
        }
    
        public virtual int Delete_Course_WithDependences_ById(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Course_WithDependences_ById", courseIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_Department_ById(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Department_ById", deptIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_Department_location_ById(Nullable<int> deptOldId, string deptOldLocation)
        {
            var deptOldIdParameter = deptOldId.HasValue ?
                new ObjectParameter("DeptOldId", deptOldId) :
                new ObjectParameter("DeptOldId", typeof(int));
    
            var deptOldLocationParameter = deptOldLocation != null ?
                new ObjectParameter("DeptOldLocation", deptOldLocation) :
                new ObjectParameter("DeptOldLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Department_location_ById", deptOldIdParameter, deptOldLocationParameter);
        }
    
        public virtual ObjectResult<string> Delete_Dept_Course_ById(Nullable<int> courseOldId, Nullable<int> detpOldID)
        {
            var courseOldIdParameter = courseOldId.HasValue ?
                new ObjectParameter("CourseOldId", courseOldId) :
                new ObjectParameter("CourseOldId", typeof(int));
    
            var detpOldIDParameter = detpOldID.HasValue ?
                new ObjectParameter("DetpOldID", detpOldID) :
                new ObjectParameter("DetpOldID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Dept_Course_ById", courseOldIdParameter, detpOldIDParameter);
        }
    
        public virtual ObjectResult<string> Delete_exam_ById(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_exam_ById", examIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_exam_question_ById(Nullable<int> examId, Nullable<int> questId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var questIdParameter = questId.HasValue ?
                new ObjectParameter("QuestId", questId) :
                new ObjectParameter("QuestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_exam_question_ById", examIdParameter, questIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_Instr_Course_ById(Nullable<int> courseOldId, Nullable<int> instrOldID)
        {
            var courseOldIdParameter = courseOldId.HasValue ?
                new ObjectParameter("CourseOldId", courseOldId) :
                new ObjectParameter("CourseOldId", typeof(int));
    
            var instrOldIDParameter = instrOldID.HasValue ?
                new ObjectParameter("InstrOldID", instrOldID) :
                new ObjectParameter("InstrOldID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Instr_Course_ById", courseOldIdParameter, instrOldIDParameter);
        }
    
        public virtual ObjectResult<string> Delete_Instr_dept_ById(Nullable<int> instrId, Nullable<int> deptId)
        {
            var instrIdParameter = instrId.HasValue ?
                new ObjectParameter("InstrId", instrId) :
                new ObjectParameter("InstrId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Instr_dept_ById", instrIdParameter, deptIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_Instructor_ById(Nullable<int> instId)
        {
            var instIdParameter = instId.HasValue ?
                new ObjectParameter("InstId", instId) :
                new ObjectParameter("InstId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Instructor_ById", instIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_Question_ById(Nullable<int> quesId)
        {
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("QuesId", quesId) :
                new ObjectParameter("QuesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Question_ById", quesIdParameter);
        }
    
        public virtual ObjectResult<string> Delete_Question_Option_ById(Nullable<int> quesID, string quesOption)
        {
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("QuesID", quesID) :
                new ObjectParameter("QuesID", typeof(int));
    
            var quesOptionParameter = quesOption != null ?
                new ObjectParameter("QuesOption", quesOption) :
                new ObjectParameter("QuesOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Question_Option_ById", quesIDParameter, quesOptionParameter);
        }
    
        public virtual int Delete_Stud_Course_Exam_ById(Nullable<int> exam_ID, Nullable<int> course_ID, Nullable<int> stud_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Stud_Course_Exam_ById", exam_IDParameter, course_IDParameter, stud_IDParameter);
        }
    
        public virtual int Delete_Stud_Exam_Quest_ById(Nullable<int> exam_ID, Nullable<int> quest_ID, Nullable<int> stud_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var quest_IDParameter = quest_ID.HasValue ?
                new ObjectParameter("Quest_ID", quest_ID) :
                new ObjectParameter("Quest_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Stud_Exam_Quest_ById", exam_IDParameter, quest_IDParameter, stud_IDParameter);
        }
    
        public virtual int Delete_Student_ById(Nullable<int> stud_ID)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Student_ById", stud_IDParameter);
        }
    
        public virtual ObjectResult<string> Delete_Student_Course_ById(Nullable<int> studID, Nullable<int> courseId)
        {
            var studIDParameter = studID.HasValue ?
                new ObjectParameter("StudID", studID) :
                new ObjectParameter("StudID", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Delete_Student_Course_ById", studIDParameter, courseIdParameter);
        }
    
        public virtual int Delete_Topic_ById(Nullable<int> topic_ID)
        {
            var topic_IDParameter = topic_ID.HasValue ?
                new ObjectParameter("Topic_ID", topic_ID) :
                new ObjectParameter("Topic_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Topic_ById", topic_IDParameter);
        }
    
        public virtual int Exam_Answers(Nullable<int> exam_ID, Nullable<int> stud_ID, Nullable<int> a1, Nullable<int> a2, Nullable<int> a3, Nullable<int> a4, Nullable<int> a5, Nullable<int> a6, Nullable<int> a7, Nullable<int> a8, Nullable<int> a9, Nullable<int> a10)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var a1Parameter = a1.HasValue ?
                new ObjectParameter("A1", a1) :
                new ObjectParameter("A1", typeof(int));
    
            var a2Parameter = a2.HasValue ?
                new ObjectParameter("A2", a2) :
                new ObjectParameter("A2", typeof(int));
    
            var a3Parameter = a3.HasValue ?
                new ObjectParameter("A3", a3) :
                new ObjectParameter("A3", typeof(int));
    
            var a4Parameter = a4.HasValue ?
                new ObjectParameter("A4", a4) :
                new ObjectParameter("A4", typeof(int));
    
            var a5Parameter = a5.HasValue ?
                new ObjectParameter("A5", a5) :
                new ObjectParameter("A5", typeof(int));
    
            var a6Parameter = a6.HasValue ?
                new ObjectParameter("A6", a6) :
                new ObjectParameter("A6", typeof(int));
    
            var a7Parameter = a7.HasValue ?
                new ObjectParameter("A7", a7) :
                new ObjectParameter("A7", typeof(int));
    
            var a8Parameter = a8.HasValue ?
                new ObjectParameter("A8", a8) :
                new ObjectParameter("A8", typeof(int));
    
            var a9Parameter = a9.HasValue ?
                new ObjectParameter("A9", a9) :
                new ObjectParameter("A9", typeof(int));
    
            var a10Parameter = a10.HasValue ?
                new ObjectParameter("A10", a10) :
                new ObjectParameter("A10", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Exam_Answers", exam_IDParameter, stud_IDParameter, a1Parameter, a2Parameter, a3Parameter, a4Parameter, a5Parameter, a6Parameter, a7Parameter, a8Parameter, a9Parameter, a10Parameter);
        }
    
        public virtual ObjectResult<ExamWithCorrectAnswers_Result> ExamWithCorrectAnswers(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExamWithCorrectAnswers_Result>("ExamWithCorrectAnswers", examIdParameter);
        }
    
        public virtual int Generate_Exam(string course_Name, Nullable<int> num_of_MCQ, Nullable<int> num_of_TF)
        {
            var course_NameParameter = course_Name != null ?
                new ObjectParameter("Course_Name", course_Name) :
                new ObjectParameter("Course_Name", typeof(string));
    
            var num_of_MCQParameter = num_of_MCQ.HasValue ?
                new ObjectParameter("Num_of_MCQ", num_of_MCQ) :
                new ObjectParameter("Num_of_MCQ", typeof(int));
    
            var num_of_TFParameter = num_of_TF.HasValue ?
                new ObjectParameter("Num_of_TF", num_of_TF) :
                new ObjectParameter("Num_of_TF", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Generate_Exam", course_NameParameter, num_of_MCQParameter, num_of_TFParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Generate_Random(Nullable<int> num, Nullable<bool> type)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Generate_Random", numParameter, typeParameter);
        }
    
        public virtual ObjectResult<get_All_Courses_Result> get_All_Courses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_All_Courses_Result>("get_All_Courses");
        }
    
        public virtual ObjectResult<get_All_Department_Result> get_All_Department()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_All_Department_Result>("get_All_Department");
        }
    
        public virtual ObjectResult<get_All_Instructors_Result> get_All_Instructors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_All_Instructors_Result>("get_All_Instructors");
        }
    
        public virtual ObjectResult<get_All_Students_Result> get_All_Students()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_All_Students_Result>("get_All_Students");
        }
    
        public virtual ObjectResult<get_all_topic_cousre_Result> get_all_topic_cousre(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_all_topic_cousre_Result>("get_all_topic_cousre", courseIdParameter);
        }
    
        public virtual ObjectResult<get_All_Topics_Result> get_All_Topics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_All_Topics_Result>("get_All_Topics");
        }
    
        public virtual ObjectResult<get_AllCourses_ByInstrID_Result> get_AllCourses_ByInstrID(Nullable<int> instrId)
        {
            var instrIdParameter = instrId.HasValue ?
                new ObjectParameter("InstrId", instrId) :
                new ObjectParameter("InstrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_AllCourses_ByInstrID_Result>("get_AllCourses_ByInstrID", instrIdParameter);
        }
    
        public virtual ObjectResult<get_AllCourses_ByStudID_Result> get_AllCourses_ByStudID(Nullable<int> studId)
        {
            var studIdParameter = studId.HasValue ?
                new ObjectParameter("StudId", studId) :
                new ObjectParameter("StudId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_AllCourses_ByStudID_Result>("get_AllCourses_ByStudID", studIdParameter);
        }
    
        public virtual ObjectResult<get_AllDepartments_ByCourseID_Result> get_AllDepartments_ByCourseID(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_AllDepartments_ByCourseID_Result>("get_AllDepartments_ByCourseID", courseIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> get_AllExams__ByCourseID(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("get_AllExams__ByCourseID", courseIdParameter);
        }
    
        public virtual ObjectResult<string> get_AllInstrs_ByCourseID(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_AllInstrs_ByCourseID", courseIdParameter);
        }
    
        public virtual ObjectResult<string> get_AllTopics_ByCourseID(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_AllTopics_ByCourseID", courseIdParameter);
        }
    
        public virtual ObjectResult<get_Course_ById_Result> get_Course_ById(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Course_ById_Result>("get_Course_ById", courseIdParameter);
        }
    
        public virtual ObjectResult<Get_Course_Topic_Result> Get_Course_Topic(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Course_Topic_Result>("Get_Course_Topic", courseIdParameter);
        }
    
        public virtual ObjectResult<string> get_Department_ById(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Department_ById", deptIdParameter);
        }
    
        public virtual ObjectResult<string> get_Dept_Course_ById(Nullable<int> courseOldId, Nullable<int> detpOldID)
        {
            var courseOldIdParameter = courseOldId.HasValue ?
                new ObjectParameter("CourseOldId", courseOldId) :
                new ObjectParameter("CourseOldId", typeof(int));
    
            var detpOldIDParameter = detpOldID.HasValue ?
                new ObjectParameter("DetpOldID", detpOldID) :
                new ObjectParameter("DetpOldID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Dept_Course_ById", courseOldIdParameter, detpOldIDParameter);
        }
    
        public virtual ObjectResult<string> get_Dept_location_ById(Nullable<int> deptId, string deptLocation)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var deptLocationParameter = deptLocation != null ?
                new ObjectParameter("DeptLocation", deptLocation) :
                new ObjectParameter("DeptLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Dept_location_ById", deptIdParameter, deptLocationParameter);
        }
    
        public virtual ObjectResult<string> get_exam_ById(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_exam_ById", examIdParameter);
        }
    
        public virtual ObjectResult<get_Exam_ByStudentId_and_ExamId_Result> get_Exam_ByStudentId_and_ExamId(Nullable<int> stud_ID, Nullable<int> examID)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("ExamID", examID) :
                new ObjectParameter("ExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Exam_ByStudentId_and_ExamId_Result>("get_Exam_ByStudentId_and_ExamId", stud_IDParameter, examIDParameter);
        }
    
        public virtual ObjectResult<string> get_exam_question_ById(Nullable<int> examId, Nullable<int> questId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var questIdParameter = questId.HasValue ?
                new ObjectParameter("QuestId", questId) :
                new ObjectParameter("QuestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_exam_question_ById", examIdParameter, questIdParameter);
        }
    
        public virtual ObjectResult<string> get_Instr_Course_ById(Nullable<int> courseOldId, Nullable<int> instrOldID)
        {
            var courseOldIdParameter = courseOldId.HasValue ?
                new ObjectParameter("CourseOldId", courseOldId) :
                new ObjectParameter("CourseOldId", typeof(int));
    
            var instrOldIDParameter = instrOldID.HasValue ?
                new ObjectParameter("InstrOldID", instrOldID) :
                new ObjectParameter("InstrOldID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Instr_Course_ById", courseOldIdParameter, instrOldIDParameter);
        }
    
        public virtual ObjectResult<string> get_Instr_Dept_ById(Nullable<int> instrId, Nullable<int> deptId)
        {
            var instrIdParameter = instrId.HasValue ?
                new ObjectParameter("InstrId", instrId) :
                new ObjectParameter("InstrId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Instr_Dept_ById", instrIdParameter, deptIdParameter);
        }
    
        public virtual ObjectResult<string> get_Instrctur_ById(Nullable<int> insId)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("InsId", insId) :
                new ObjectParameter("InsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Instrctur_ById", insIdParameter);
        }
    
        public virtual ObjectResult<string> get_Question_ById(Nullable<int> quesID)
        {
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("QuesID", quesID) :
                new ObjectParameter("QuesID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Question_ById", quesIDParameter);
        }
    
        public virtual ObjectResult<string> get_Question_option_ById(Nullable<int> quesID, string quesOption)
        {
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("QuesID", quesID) :
                new ObjectParameter("QuesID", typeof(int));
    
            var quesOptionParameter = quesOption != null ?
                new ObjectParameter("QuesOption", quesOption) :
                new ObjectParameter("QuesOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Question_option_ById", quesIDParameter, quesOptionParameter);
        }
    
        public virtual ObjectResult<get_questuin_options_Result> get_questuin_options(Nullable<int> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_questuin_options_Result>("get_questuin_options", examIdParameter);
        }
    
        public virtual ObjectResult<Get_stud_By_DeptID_Result> Get_stud_By_DeptID(Nullable<int> dept_ID)
        {
            var dept_IDParameter = dept_ID.HasValue ?
                new ObjectParameter("Dept_ID", dept_ID) :
                new ObjectParameter("Dept_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_stud_By_DeptID_Result>("Get_stud_By_DeptID", dept_IDParameter);
        }
    
        public virtual int get_Stud_Course_Exam_ById(Nullable<int> exam_ID, Nullable<int> course_ID, Nullable<int> stud_ID, ObjectParameter grade)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("get_Stud_Course_Exam_ById", exam_IDParameter, course_IDParameter, stud_IDParameter, grade);
        }
    
        public virtual ObjectResult<get_Stud_Course_Exam_Data_ById_Result> get_Stud_Course_Exam_Data_ById(Nullable<int> exam_ID, Nullable<int> course_ID, Nullable<int> stud_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Stud_Course_Exam_Data_ById_Result>("get_Stud_Course_Exam_Data_ById", exam_IDParameter, course_IDParameter, stud_IDParameter);
        }
    
        public virtual ObjectResult<get_Stud_Exam_Quest_ById_Result> get_Stud_Exam_Quest_ById(Nullable<int> exam_ID, Nullable<int> quest_ID, Nullable<int> stud_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var quest_IDParameter = quest_ID.HasValue ?
                new ObjectParameter("Quest_ID", quest_ID) :
                new ObjectParameter("Quest_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Stud_Exam_Quest_ById_Result>("get_Stud_Exam_Quest_ById", exam_IDParameter, quest_IDParameter, stud_IDParameter);
        }
    
        public virtual ObjectResult<get_Stud_Exam_Quest_Data_ById_Result> get_Stud_Exam_Quest_Data_ById(Nullable<int> exam_ID, Nullable<int> quest_ID, Nullable<int> stud_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var quest_IDParameter = quest_ID.HasValue ?
                new ObjectParameter("Quest_ID", quest_ID) :
                new ObjectParameter("Quest_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Stud_Exam_Quest_Data_ById_Result>("get_Stud_Exam_Quest_Data_ById", exam_IDParameter, quest_IDParameter, stud_IDParameter);
        }
    
        public virtual ObjectResult<get_Stud_Grade_AllCourseID_Result> get_Stud_Grade_AllCourseID(Nullable<int> stud_id)
        {
            var stud_idParameter = stud_id.HasValue ?
                new ObjectParameter("Stud_id", stud_id) :
                new ObjectParameter("Stud_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Stud_Grade_AllCourseID_Result>("get_Stud_Grade_AllCourseID", stud_idParameter);
        }
    
        public virtual ObjectResult<string> get_Student_Course_ById(Nullable<int> studID, Nullable<int> courseId)
        {
            var studIDParameter = studID.HasValue ?
                new ObjectParameter("StudID", studID) :
                new ObjectParameter("StudID", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("get_Student_Course_ById", studIDParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<get_Student_Data_ById_Result> get_Student_Data_ById(Nullable<int> stud_ID)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Student_Data_ById_Result>("get_Student_Data_ById", stud_IDParameter);
        }
    
        public virtual ObjectResult<Get_Student_Numbers_Result> Get_Student_Numbers(Nullable<int> inst_id)
        {
            var inst_idParameter = inst_id.HasValue ?
                new ObjectParameter("Inst_id", inst_id) :
                new ObjectParameter("Inst_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Student_Numbers_Result>("Get_Student_Numbers", inst_idParameter);
        }
    
        public virtual ObjectResult<get_Topic_Course_Data_ById_Result> get_Topic_Course_Data_ById(Nullable<int> topic_ID)
        {
            var topic_IDParameter = topic_ID.HasValue ?
                new ObjectParameter("Topic_ID", topic_ID) :
                new ObjectParameter("Topic_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Topic_Course_Data_ById_Result>("get_Topic_Course_Data_ById", topic_IDParameter);
        }
    
        public virtual ObjectResult<get_Topic_Data_ById_Result> get_Topic_Data_ById(Nullable<int> topic_ID)
        {
            var topic_IDParameter = topic_ID.HasValue ?
                new ObjectParameter("Topic_ID", topic_ID) :
                new ObjectParameter("Topic_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_Topic_Data_ById_Result>("get_Topic_Data_ById", topic_IDParameter);
        }
    
        public virtual int insert_course(string courseName, Nullable<int> courseDuration, ObjectParameter courseid)
        {
            var courseNameParameter = courseName != null ?
                new ObjectParameter("CourseName", courseName) :
                new ObjectParameter("CourseName", typeof(string));
    
            var courseDurationParameter = courseDuration.HasValue ?
                new ObjectParameter("CourseDuration", courseDuration) :
                new ObjectParameter("CourseDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_course", courseNameParameter, courseDurationParameter, courseid);
        }
    
        public virtual int insert_Department(string deptName, string description, Nullable<int> instID, ObjectParameter deptId)
        {
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var instIDParameter = instID.HasValue ?
                new ObjectParameter("InstID", instID) :
                new ObjectParameter("InstID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Department", deptNameParameter, descriptionParameter, instIDParameter, deptId);
        }
    
        public virtual int insert_Dept_Course_ById(Nullable<int> deptId, Nullable<int> courseId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Dept_Course_ById", deptIdParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<string> insert_Dept_Location(Nullable<int> deptId, string deptLocation)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var deptLocationParameter = deptLocation != null ?
                new ObjectParameter("DeptLocation", deptLocation) :
                new ObjectParameter("DeptLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("insert_Dept_Location", deptIdParameter, deptLocationParameter);
        }
    
        public virtual int Insert_exam(Nullable<int> questionNumMCQ, Nullable<int> questionNumTF, Nullable<int> courseId, ObjectParameter exam_Id)
        {
            var questionNumMCQParameter = questionNumMCQ.HasValue ?
                new ObjectParameter("QuestionNumMCQ", questionNumMCQ) :
                new ObjectParameter("QuestionNumMCQ", typeof(int));
    
            var questionNumTFParameter = questionNumTF.HasValue ?
                new ObjectParameter("QuestionNumTF", questionNumTF) :
                new ObjectParameter("QuestionNumTF", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_exam", questionNumMCQParameter, questionNumTFParameter, courseIdParameter, exam_Id);
        }
    
        public virtual int Insert_exam_question(Nullable<int> examId, Nullable<int> questId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var questIdParameter = questId.HasValue ?
                new ObjectParameter("QuestId", questId) :
                new ObjectParameter("QuestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_exam_question", examIdParameter, questIdParameter);
        }
    
        public virtual int insert_Instr_Course(Nullable<int> instrId, Nullable<int> courseId)
        {
            var instrIdParameter = instrId.HasValue ?
                new ObjectParameter("InstrId", instrId) :
                new ObjectParameter("InstrId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Instr_Course", instrIdParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<string> Insert_Instr_Dept(Nullable<int> instrId, Nullable<int> deptId)
        {
            var instrIdParameter = instrId.HasValue ?
                new ObjectParameter("instrId", instrId) :
                new ObjectParameter("instrId", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insert_Instr_Dept", instrIdParameter, deptIdParameter);
        }
    
        public virtual int insert_Instructor(string instName, Nullable<double> salary, string degree, string password, ObjectParameter instId)
        {
            var instNameParameter = instName != null ?
                new ObjectParameter("InstName", instName) :
                new ObjectParameter("InstName", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(double));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Instructor", instNameParameter, salaryParameter, degreeParameter, passwordParameter, instId);
        }
    
        public virtual int insert_Question(string quesDescription, Nullable<int> answer, Nullable<bool> quesType)
        {
            var quesDescriptionParameter = quesDescription != null ?
                new ObjectParameter("QuesDescription", quesDescription) :
                new ObjectParameter("QuesDescription", typeof(string));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(int));
    
            var quesTypeParameter = quesType.HasValue ?
                new ObjectParameter("QuesType", quesType) :
                new ObjectParameter("QuesType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Question", quesDescriptionParameter, answerParameter, quesTypeParameter);
        }
    
        public virtual ObjectResult<string> Insert_Question_Option(Nullable<int> quesID, string quesOption)
        {
            var quesIDParameter = quesID.HasValue ?
                new ObjectParameter("QuesID", quesID) :
                new ObjectParameter("QuesID", typeof(int));
    
            var quesOptionParameter = quesOption != null ?
                new ObjectParameter("QuesOption", quesOption) :
                new ObjectParameter("QuesOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insert_Question_Option", quesIDParameter, quesOptionParameter);
        }
    
        public virtual int Insert_Stud_Course_Exam(Nullable<int> stud_ID, Nullable<int> course_ID, Nullable<int> exam_ID, Nullable<double> grade)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Stud_Course_Exam", stud_IDParameter, course_IDParameter, exam_IDParameter, gradeParameter);
        }
    
        public virtual int Insert_Stud_Exam_Quest(Nullable<int> exam_ID, Nullable<int> quest_ID, Nullable<int> stud_ID, Nullable<int> answer, Nullable<double> grade)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var quest_IDParameter = quest_ID.HasValue ?
                new ObjectParameter("Quest_ID", quest_ID) :
                new ObjectParameter("Quest_ID", typeof(int));
    
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Stud_Exam_Quest", exam_IDParameter, quest_IDParameter, stud_IDParameter, answerParameter, gradeParameter);
        }
    
        public virtual int Insert_Student(Nullable<int> stud_ID, string stud_Fname, string stud_Lname, string address, Nullable<double> gPA, string password)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var stud_FnameParameter = stud_Fname != null ?
                new ObjectParameter("Stud_Fname", stud_Fname) :
                new ObjectParameter("Stud_Fname", typeof(string));
    
            var stud_LnameParameter = stud_Lname != null ?
                new ObjectParameter("Stud_Lname", stud_Lname) :
                new ObjectParameter("Stud_Lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var gPAParameter = gPA.HasValue ?
                new ObjectParameter("GPA", gPA) :
                new ObjectParameter("GPA", typeof(double));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Student", stud_IDParameter, stud_FnameParameter, stud_LnameParameter, addressParameter, gPAParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> Insert_Student_Course(Nullable<int> studID, Nullable<int> courseId)
        {
            var studIDParameter = studID.HasValue ?
                new ObjectParameter("StudID", studID) :
                new ObjectParameter("StudID", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Insert_Student_Course", studIDParameter, courseIdParameter);
        }
    
        public virtual int Insert_Topic(string topic_Name, Nullable<int> course_ID)
        {
            var topic_NameParameter = topic_Name != null ?
                new ObjectParameter("Topic_Name", topic_Name) :
                new ObjectParameter("Topic_Name", typeof(string));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Topic", topic_NameParameter, course_IDParameter);
        }
    
        public virtual int Is_StudentTakeExam(Nullable<int> stud_ID, Nullable<int> course_ID, ObjectParameter choosenExam_id)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Is_StudentTakeExam", stud_IDParameter, course_IDParameter, choosenExam_id);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Take_Random_Exam(Nullable<int> stud_ID, Nullable<int> course_ID, ObjectParameter choosenExam_id)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Take_Random_Exam", stud_IDParameter, course_IDParameter, choosenExam_id);
        }
    
        public virtual int update_course_ById(Nullable<int> courseId, string courseName, Nullable<int> courseDuration)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var courseNameParameter = courseName != null ?
                new ObjectParameter("CourseName", courseName) :
                new ObjectParameter("CourseName", typeof(string));
    
            var courseDurationParameter = courseDuration.HasValue ?
                new ObjectParameter("CourseDuration", courseDuration) :
                new ObjectParameter("CourseDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_course_ById", courseIdParameter, courseNameParameter, courseDurationParameter);
        }
    
        public virtual ObjectResult<string> Update_Department_ById(Nullable<int> deptId, string deptName, string description, Nullable<int> instNewID)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var instNewIDParameter = instNewID.HasValue ?
                new ObjectParameter("InstNewID", instNewID) :
                new ObjectParameter("InstNewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Update_Department_ById", deptIdParameter, deptNameParameter, descriptionParameter, instNewIDParameter);
        }
    
        public virtual ObjectResult<string> update_Dept_Course_ById(Nullable<int> courseOldId, Nullable<int> detpOldID, Nullable<int> courseNewId, Nullable<int> detpNewID)
        {
            var courseOldIdParameter = courseOldId.HasValue ?
                new ObjectParameter("CourseOldId", courseOldId) :
                new ObjectParameter("CourseOldId", typeof(int));
    
            var detpOldIDParameter = detpOldID.HasValue ?
                new ObjectParameter("DetpOldID", detpOldID) :
                new ObjectParameter("DetpOldID", typeof(int));
    
            var courseNewIdParameter = courseNewId.HasValue ?
                new ObjectParameter("CourseNewId", courseNewId) :
                new ObjectParameter("CourseNewId", typeof(int));
    
            var detpNewIDParameter = detpNewID.HasValue ?
                new ObjectParameter("DetpNewID", detpNewID) :
                new ObjectParameter("DetpNewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Dept_Course_ById", courseOldIdParameter, detpOldIDParameter, courseNewIdParameter, detpNewIDParameter);
        }
    
        public virtual ObjectResult<string> Update_Dept_location_ById(Nullable<int> deptOldId, string deptOldLocation, Nullable<int> deptNewId, string deptNewLocation)
        {
            var deptOldIdParameter = deptOldId.HasValue ?
                new ObjectParameter("DeptOldId", deptOldId) :
                new ObjectParameter("DeptOldId", typeof(int));
    
            var deptOldLocationParameter = deptOldLocation != null ?
                new ObjectParameter("DeptOldLocation", deptOldLocation) :
                new ObjectParameter("DeptOldLocation", typeof(string));
    
            var deptNewIdParameter = deptNewId.HasValue ?
                new ObjectParameter("DeptNewId", deptNewId) :
                new ObjectParameter("DeptNewId", typeof(int));
    
            var deptNewLocationParameter = deptNewLocation != null ?
                new ObjectParameter("DeptNewLocation", deptNewLocation) :
                new ObjectParameter("DeptNewLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Update_Dept_location_ById", deptOldIdParameter, deptOldLocationParameter, deptNewIdParameter, deptNewLocationParameter);
        }
    
        public virtual ObjectResult<string> update_exam_ById(Nullable<int> examId, Nullable<int> questionNumMCQ, Nullable<int> questionNumTF, Nullable<int> courseId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("examId", examId) :
                new ObjectParameter("examId", typeof(int));
    
            var questionNumMCQParameter = questionNumMCQ.HasValue ?
                new ObjectParameter("QuestionNumMCQ", questionNumMCQ) :
                new ObjectParameter("QuestionNumMCQ", typeof(int));
    
            var questionNumTFParameter = questionNumTF.HasValue ?
                new ObjectParameter("QuestionNumTF", questionNumTF) :
                new ObjectParameter("QuestionNumTF", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_exam_ById", examIdParameter, questionNumMCQParameter, questionNumTFParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<string> Update_exam_question_ById(Nullable<int> examOldId, Nullable<int> questOldId, Nullable<int> examNewId, Nullable<int> questNewId)
        {
            var examOldIdParameter = examOldId.HasValue ?
                new ObjectParameter("ExamOldId", examOldId) :
                new ObjectParameter("ExamOldId", typeof(int));
    
            var questOldIdParameter = questOldId.HasValue ?
                new ObjectParameter("QuestOldId", questOldId) :
                new ObjectParameter("QuestOldId", typeof(int));
    
            var examNewIdParameter = examNewId.HasValue ?
                new ObjectParameter("ExamNewId", examNewId) :
                new ObjectParameter("ExamNewId", typeof(int));
    
            var questNewIdParameter = questNewId.HasValue ?
                new ObjectParameter("QuestNewId", questNewId) :
                new ObjectParameter("QuestNewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Update_exam_question_ById", examOldIdParameter, questOldIdParameter, examNewIdParameter, questNewIdParameter);
        }
    
        public virtual ObjectResult<string> update_Instr_Course_ById(Nullable<int> courseOldId, Nullable<int> instrOldID, Nullable<int> courseNewId, Nullable<int> instrNewID)
        {
            var courseOldIdParameter = courseOldId.HasValue ?
                new ObjectParameter("CourseOldId", courseOldId) :
                new ObjectParameter("CourseOldId", typeof(int));
    
            var instrOldIDParameter = instrOldID.HasValue ?
                new ObjectParameter("InstrOldID", instrOldID) :
                new ObjectParameter("InstrOldID", typeof(int));
    
            var courseNewIdParameter = courseNewId.HasValue ?
                new ObjectParameter("CourseNewId", courseNewId) :
                new ObjectParameter("CourseNewId", typeof(int));
    
            var instrNewIDParameter = instrNewID.HasValue ?
                new ObjectParameter("InstrNewID", instrNewID) :
                new ObjectParameter("InstrNewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Instr_Course_ById", courseOldIdParameter, instrOldIDParameter, courseNewIdParameter, instrNewIDParameter);
        }
    
        public virtual ObjectResult<string> update_Instr_Dept_ById(Nullable<int> instrOldId, Nullable<int> deptOldId, Nullable<int> instrNewId, Nullable<int> deptNewId)
        {
            var instrOldIdParameter = instrOldId.HasValue ?
                new ObjectParameter("InstrOldId", instrOldId) :
                new ObjectParameter("InstrOldId", typeof(int));
    
            var deptOldIdParameter = deptOldId.HasValue ?
                new ObjectParameter("DeptOldId", deptOldId) :
                new ObjectParameter("DeptOldId", typeof(int));
    
            var instrNewIdParameter = instrNewId.HasValue ?
                new ObjectParameter("InstrNewId", instrNewId) :
                new ObjectParameter("InstrNewId", typeof(int));
    
            var deptNewIdParameter = deptNewId.HasValue ?
                new ObjectParameter("DeptNewId", deptNewId) :
                new ObjectParameter("DeptNewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Instr_Dept_ById", instrOldIdParameter, deptOldIdParameter, instrNewIdParameter, deptNewIdParameter);
        }
    
        public virtual ObjectResult<string> update_Instructor_ById(Nullable<int> instId, string instName, Nullable<double> salary, string degree, string password)
        {
            var instIdParameter = instId.HasValue ?
                new ObjectParameter("InstId", instId) :
                new ObjectParameter("InstId", typeof(int));
    
            var instNameParameter = instName != null ?
                new ObjectParameter("InstName", instName) :
                new ObjectParameter("InstName", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(double));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Instructor_ById", instIdParameter, instNameParameter, salaryParameter, degreeParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> update_Question_ById(Nullable<int> quesId, string quesDescription, Nullable<int> answer, Nullable<bool> quesType)
        {
            var quesIdParameter = quesId.HasValue ?
                new ObjectParameter("QuesId", quesId) :
                new ObjectParameter("QuesId", typeof(int));
    
            var quesDescriptionParameter = quesDescription != null ?
                new ObjectParameter("QuesDescription", quesDescription) :
                new ObjectParameter("QuesDescription", typeof(string));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(int));
    
            var quesTypeParameter = quesType.HasValue ?
                new ObjectParameter("QuesType", quesType) :
                new ObjectParameter("QuesType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Question_ById", quesIdParameter, quesDescriptionParameter, answerParameter, quesTypeParameter);
        }
    
        public virtual ObjectResult<string> update_Question_Option_ById(Nullable<int> oldQuesID, Nullable<int> newQuesID, string oldQuesOption, string newQuesOption)
        {
            var oldQuesIDParameter = oldQuesID.HasValue ?
                new ObjectParameter("OldQuesID", oldQuesID) :
                new ObjectParameter("OldQuesID", typeof(int));
    
            var newQuesIDParameter = newQuesID.HasValue ?
                new ObjectParameter("NewQuesID", newQuesID) :
                new ObjectParameter("NewQuesID", typeof(int));
    
            var oldQuesOptionParameter = oldQuesOption != null ?
                new ObjectParameter("OldQuesOption", oldQuesOption) :
                new ObjectParameter("OldQuesOption", typeof(string));
    
            var newQuesOptionParameter = newQuesOption != null ?
                new ObjectParameter("NewQuesOption", newQuesOption) :
                new ObjectParameter("NewQuesOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Question_Option_ById", oldQuesIDParameter, newQuesIDParameter, oldQuesOptionParameter, newQuesOptionParameter);
        }
    
        public virtual int Update_Stud_Course_Exam_ById(Nullable<int> stud_ID, Nullable<int> course_ID, Nullable<int> exam_ID, Nullable<double> grade)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Stud_Course_Exam_ById", stud_IDParameter, course_IDParameter, exam_IDParameter, gradeParameter);
        }
    
        public virtual int Update_Stud_Exam_Quest_ById(Nullable<int> stud_ID, Nullable<int> quest_ID, Nullable<int> exam_ID, Nullable<int> answer, Nullable<double> grade)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var quest_IDParameter = quest_ID.HasValue ?
                new ObjectParameter("Quest_ID", quest_ID) :
                new ObjectParameter("Quest_ID", typeof(int));
    
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Stud_Exam_Quest_ById", stud_IDParameter, quest_IDParameter, exam_IDParameter, answerParameter, gradeParameter);
        }
    
        public virtual int Update_Student_ById(Nullable<int> stud_ID, string stud_Fname, string stud_Lname, string address, Nullable<double> gPA, string password)
        {
            var stud_IDParameter = stud_ID.HasValue ?
                new ObjectParameter("Stud_ID", stud_ID) :
                new ObjectParameter("Stud_ID", typeof(int));
    
            var stud_FnameParameter = stud_Fname != null ?
                new ObjectParameter("Stud_Fname", stud_Fname) :
                new ObjectParameter("Stud_Fname", typeof(string));
    
            var stud_LnameParameter = stud_Lname != null ?
                new ObjectParameter("Stud_Lname", stud_Lname) :
                new ObjectParameter("Stud_Lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var gPAParameter = gPA.HasValue ?
                new ObjectParameter("GPA", gPA) :
                new ObjectParameter("GPA", typeof(double));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Student_ById", stud_IDParameter, stud_FnameParameter, stud_LnameParameter, addressParameter, gPAParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> update_Student_Course_ById(Nullable<int> oldStudID, Nullable<int> newStudID, Nullable<int> oldCourseId, Nullable<int> newCourseId)
        {
            var oldStudIDParameter = oldStudID.HasValue ?
                new ObjectParameter("OldStudID", oldStudID) :
                new ObjectParameter("OldStudID", typeof(int));
    
            var newStudIDParameter = newStudID.HasValue ?
                new ObjectParameter("NewStudID", newStudID) :
                new ObjectParameter("NewStudID", typeof(int));
    
            var oldCourseIdParameter = oldCourseId.HasValue ?
                new ObjectParameter("OldCourseId", oldCourseId) :
                new ObjectParameter("OldCourseId", typeof(int));
    
            var newCourseIdParameter = newCourseId.HasValue ?
                new ObjectParameter("NewCourseId", newCourseId) :
                new ObjectParameter("NewCourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("update_Student_Course_ById", oldStudIDParameter, newStudIDParameter, oldCourseIdParameter, newCourseIdParameter);
        }
    
        public virtual int Update_Topic_ById(Nullable<int> topic_ID, string topic_Name, Nullable<int> course_ID)
        {
            var topic_IDParameter = topic_ID.HasValue ?
                new ObjectParameter("Topic_ID", topic_ID) :
                new ObjectParameter("Topic_ID", typeof(int));
    
            var topic_NameParameter = topic_Name != null ?
                new ObjectParameter("Topic_Name", topic_Name) :
                new ObjectParameter("Topic_Name", typeof(string));
    
            var course_IDParameter = course_ID.HasValue ?
                new ObjectParameter("Course_ID", course_ID) :
                new ObjectParameter("Course_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Topic_ById", topic_IDParameter, topic_NameParameter, course_IDParameter);
        }
    }
}
